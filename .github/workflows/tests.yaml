name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 0 * * *"

jobs:
  Linting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: pre-commit/action@v3.0.0

  Test:
    needs: Linting
    name: ${{ matrix.os }}, ${{ matrix.env }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest]
        env:
          - continuous_integration/envs/39-no-optional-deps.yaml
          - continuous_integration/envs/38-minimal.yaml
          - continuous_integration/envs/310-latest.yaml
          - continuous_integration/envs/311-latest.yaml

        include:
          - env: continuous_integration/envs/310-latest.yaml
            os: macos-latest
          - env: continuous_integration/envs/310-latest.yaml
            os: windows-latest
          - env: continuous_integration/envs/311-dev.yaml
            os: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: ${{ matrix.env }}
          miniforge-version: latest
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: Check and Log Environment
        run: |
          python -V
          python -c "import geopandas; geopandas.show_versions();"
          conda info
          conda list

      - name: Test
        run: |
          pytest -v -r a --color=yes --cov=dask_geopandas --cov-append --cov-report term-missing --cov-report xml .

      - uses: codecov/codecov-action@v2
